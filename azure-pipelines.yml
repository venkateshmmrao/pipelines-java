# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
name: GitHub-Pipeline-Demo

trigger:
- none

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
  submodules: true
  persistCredentials: true
  clean: true
- bash: git config user.email azure@devops && git config user.name "Azure DevOps" && git status
  displayName: Configure git
- bash: git checkout $(Build.SourceBranchName)
  displayName: Checkout $(Build.SourceBranchName)
- bash: git reset --hard remotes/origin/$(Build.SourceBranchName)
  displayName: git reset
- script: az --version
  displayName: 'Show Azure CLI version'
- script: az extension add -n azure-devops
  displayName: 'Install Azure Devops Extension'
- script: echo ${AZURE_DEVOPS_CLI_PAT} | az devops login
  env:
    AZURE_DEVOPS_CLI_PAT: $(System.AccessToken)
  displayName: 'Login Azure Devops Extension'
- script: az devops configure --defaults organization=https://dev.azure.com/bhatrashu project="GitHubDemo" --use-git-aliases true
  displayName: 'Set default Azure DevOps organization and project'
- script: |
    version=$(mvn -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec -q)
    echo "version from maven $version"
    release_version=$(echo $version | cut -d'-' -f 1)
    echo "release_version is $release_version" 
  displayName: 'Update Version'
  
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
